// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  type          String       @default("user")
  accounts      Account[]
  sessions      Session[]
  restaurants   Restaurant[]
  Order         Order[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Restaurant {
  id          String     @id @default(cuid())
  createdAt   DateTime   @default(now())
  title       String
  desc        String
  town        String
  address     String
  color       String
  img         String
  postalCode  String
  openingTime String
  closingTime String
  lat         Float      @default(0.0)
  lng         Float      @default(0.0) 
  slug        String     @unique
  ownerID     String
  owner       User       @relation(fields: [ownerID], references: [id])
  catagories  Category[]
}

model Category {
  id         String     @id @default(cuid())
  createdAt  DateTime   @default(now())
  title      String
  desc       String
  color      String
  img        String
  slug       String     @unique
  products   Product[]
  restaurant Restaurant @relation(fields: [restSlug], references: [slug])
  restSlug   String
}

model Product {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  title      String
  desc       String
  img        String?
  price      Decimal
  isFeatured Boolean  @default(false)
  options    Json[]
  category   Category @relation(fields: [catSlug], references: [slug])
  catSlug    String
}

model Order {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  price     Decimal
  products  Json[]
  status    String
  paymentMethod String
  pickupTime DateTime?
  intent_id String?  @unique
  user      User     @relation(fields: [userEmail], references: [email])
  userEmail String
}
